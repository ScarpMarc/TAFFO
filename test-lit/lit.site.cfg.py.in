
import os
import lit.formats

config.host_triple = "@LLVM_HOST_TRIPLE@"
config.target_triple = "@TARGET_TRIPLE@"
config.llvm_include_dirs = "@LLVM_INCLUDE_DIRS@"
config.llvm_src_root = "@LLVM_SOURCE_DIR@"
config.llvm_obj_root = "@LLVM_BINARY_DIR@"
config.llvm_tools_dir = "@LLVM_TOOLS_DIR@"
config.llvm_libs_dir = "@LLVM_LIBS_DIR@"
config.llvm_shlib_dir = "@SHLIBDIR@"
config.llvm_shlib_ext = "@SHLIBEXT@"
config.llvm_exe_ext = "@EXEEXT@"
config.lit_tools_dir = "@LLVM_LIT_TOOLS_DIR@"
config.python_executable = "@PYTHON_EXECUTABLE@"
config.gold_executable = "@GOLD_EXECUTABLE@"
config.ld64_executable = "@LD64_EXECUTABLE@"
config.enable_shared = @ENABLE_SHARED@
config.enable_assertions = @ENABLE_ASSERTIONS@
config.targets_to_build = "@TARGETS_TO_BUILD@"
config.native_target = "@LLVM_NATIVE_ARCH@"
config.llvm_bindings = "@LLVM_BINDINGS@".split(' ')
config.host_os = "@HOST_OS@"
config.host_cc = "@HOST_CC@"
config.host_cxx = "@HOST_CXX@"
config.enable_libcxx = "@LLVM_ENABLE_LIBCXX@"
# Note: ldflags can contain double-quoted paths, so must use single quotes here.
config.host_ldflags = '@HOST_LDFLAGS@'
config.llvm_use_sanitizer = "@LLVM_USE_SANITIZER@"
config.llvm_host_triple = '@LLVM_HOST_TRIPLE@'
config.host_arch = "@HOST_ARCH@"

# name: The name of this test suite.
config.name = "ErrorPropagator Regression Tests"

# test_format: The test format to use to interpret tests.
config.test_format = lit.formats.ShTest(True)

# test_source_root: The root path where tests are located.
config.test_source_root = "@CMAKE_CURRENT_SOURCE_DIR@"

# test_exec_root: The root path where tests should be run.
config.test_exec_root = "@CMAKE_CURRENT_BINARY_DIR@"

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.ll', '.c', '.cpp', '.test', '.txt', '.s']

config.excludes = ['CMakeCache.txt', 'CMakeFiles', 'CMakeLists.txt']

config.substitutions.append(('%epbindir', '@CMAKE_BINARY_DIR@'))
config.substitutions.append(('%shlibext', '@CMAKE_SHARED_LIBRARY_SUFFIX@'))
config.substitutions.append(('%exeext', '@CMAKE_EXECUTABLE_SUFFIX@'))
config.substitutions.append(('%errorproplib',
                             os.path.join('@CMAKE_BINARY_DIR@',
                                          'lib',
                                          'Taffo@CMAKE_SHARED_LIBRARY_SUFFIX@')))
config.substitutions.append(('opt', os.path.join('@LLVM_TOOLS_BINARY_DIR@',
                                                 'opt')))

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(config, "@CMAKE_CURRENT_SOURCE_DIR@/lit.cfg.py")
